---
- hosts: all
  become: true
  tasks:
    - name: Add the required kernel modules modules
      modprobe:
        name: "{{item}}"
        state: present
      loop:
        - overlay
        - br_netfilter
    
    - name: Set sysctl parameters
      sysctl:
        name: "{{item}}"
        state: present
        value: 1
        reload: True
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.ipv4.ip_forward
        - net.bridge.bridge-nf-call-ip6tables
    - name: Enable rhcontainerbot/container-selinux repo
      yum:
        enablerepo: "rhcontainerbot/container-selinux"
        state: present

    - name: Add the cri-o repo
      get_url:
        url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.20:/1.20.0/CentOS_8/devel:kubic:libcontainers:stable:cri-o:1.20:1.20.0.repo
        dest: /etc/yum.repos.d/crio.repo

    - name: Add the libcontainer repo
      get_url:
        url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/devel:kubic:libcontainers:stable.repo
        dest: /etc/yum.repos.d/libcontainers.repo

    - name: Add the kubernetes repo
      copy:
        src: kubernetes.repo
        dest: /etc/yum.repos.d/kubernetes.repo

#The order of the kube* packages matters because they have dependencies between them
    - name: Install the required packages on master
      yum:
        name: "{{item}}"
        state: present
        update_cache: True
        disable_excludes: kubernetes
      loop:
        - cri-o
        - iproute-tc
        - kubelet-1.20*
        - kubectl-1.20*
        - kubeadm-1.20*
#    - name: Update crio configuration file with the right path
#      lineinfile:
#        path: /etc/crio/crio.conf
#        regexp: '\/usr\/libexec\/crio\/conmon/'
#        line: /usr/bin/conmon
    
    - name: Update the kubelet config tu use systemd cgroup driver
      blockinfile:
        create: True
        path: /var/lib/kubelet/config.yaml
        block: |
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          cgroupDriver: systemd

    - name: Update kubelet start arguments
      lineinfile:
        path: /etc/sysconfig/kubelet
        line: KUBELET_EXTRA_ARGS=--container-runtime=remote --cgroup-driver=systemd --container-runtime-endpoint='unix:///var/run/crio/crio.sock'
        state: present
    
    - name: add our hostname to the hosts file
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: "{{ ansible_default_ipv4.address }} node1"    
        state: present


    - name: Enable and start cri-o and kubelet
      service:
        name: "{{ item }}"
        enabled: True
        state: started
      loop:
        - cri-o
        - kubelet
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      loop:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
  # Fix for vagrant environments
  #  - name: Ensure kubelet configs are correct
  #    synchronize:
  #      src: "master-kubelet.conf"
  #      dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"

    - name: Get the solutions dir
      get_url:
        url: https://training.linuxfoundation.org/cm/LFS258/LFS258_V2021-08-02_SOLUTIONS.tar.xz
        dest: /home/vagrant/LFS258.tar.xz
        url_username: LFtraining
        url_password: Penguin2014